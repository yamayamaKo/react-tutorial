{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","this","React","Component","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","htmlFor","type","id","onChange","App","characters","filter","character","i","concat","className","ReactDOM","render","document","getElementById"],"mappings":"4NAEMA,EAAc,WAChB,OACI,iCACI,+BACI,sCACA,qCACA,8CAMVC,EAAY,SAACC,GACf,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAIC,GACtC,OACI,+BACI,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACI,wBAAQC,QAAS,kBAAIR,EAAMS,gBAAgBJ,IAA3C,wBAJCA,MAUjB,OAAO,gCAAQJ,KAmBJS,E,4JAdX,WAGI,OACA,kCACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAWR,cAAeS,KAAKX,MAAME,cACjCO,gBAAiBE,KAAKX,MAAMS,yB,GATxBG,IAAMC,W,OCmBXC,E,4MA9CXC,aAAe,CACXT,KAAM,GACNC,IAAK,I,EAGTS,MAAQ,EAAKD,a,EAEbE,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,OAArBb,EADe,EACfA,KAAMc,EADS,EACTA,MAEb,EAAKC,SAAL,eACKf,EAAOc,K,EAIhBE,WAAa,WACe,KAApB,EAAKN,MAAMV,MAAkC,KAAnB,EAAKU,MAAMT,MACzC,EAAKP,MAAMuB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,gB,4CAGvB,WAAS,IAAD,EACgBJ,KAAKK,MAAlBV,EADH,EACGA,KAAMC,EADT,EACSA,IAEb,OACI,iCACI,uBAAOiB,QAAQ,OAAf,kBACA,uBACIC,KAAK,OACLnB,KAAK,OACLoB,GAAG,OACHN,MAAOd,EACPqB,SAAUhB,KAAKM,eACnB,uBAAOO,QAAQ,MAAf,iBACA,uBACIC,KAAK,OACLnB,KAAK,MACLoB,GAAG,MACHN,MAAOb,EACPoB,SAAUhB,KAAKM,eACnB,uBAAOQ,KAAK,SAASL,MAAM,SAASZ,QAASG,KAAKW,oB,GAzC/CV,IAAMC,WCmCVe,E,4MAhCXZ,MAAQ,CACJa,WAAY,I,EAGhBpB,gBAAkB,SAACJ,GACf,EAAKgB,SAAS,CACVQ,WAAY,EAAKb,MAAMa,WAAWC,QAAO,SAACC,EAAWC,GACjD,OAAOA,IAAM3B,Q,EAKzBkB,aAAe,SAACQ,GACZ,EAAKV,SAAS,CAACQ,WAAY,EAAKb,MAAMa,WAAWI,OAAO,CAACF,O,4CAG7D,WACE,OACE,sBAAKG,UAAU,MAAf,UACE,gDACA,sFACA,cAAC,EAAD,CACEhC,cAAeS,KAAKK,MAAMa,WAC1BpB,gBAAmBE,KAAKF,kBAE1B,yCACA,cAAC,EAAD,CAAMc,aAAcZ,KAAKY,sB,GA3BjBX,IAAMC,WCKxBsB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.4ceccd7c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TableHeader = () => {\r\n    return (\r\n        <thread>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Job</th>\r\n                <th>Remove</th>\r\n            </tr>\r\n        </thread>\r\n    )\r\n}\r\n\r\nconst TableBody = (props) => {\r\n    const rows = props.characterData.map((row,index) => {\r\n        return (\r\n            <tr key={index}>\r\n                <td>{row.name}</td>\r\n                <td>{row.job}</td>\r\n                <td>\r\n                    <button onClick={()=>props.removeCharacter(index)}>Delete</button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    })\r\n\r\n    return <tbody>{rows}</tbody>\r\n }\r\n\r\nclass Table extends React.Component {\r\n\r\n    render(){\r\n        // const {characterData, removeCharacter} = props;\r\n        // const {characterData} = this.props\r\n        return(\r\n        <table>\r\n            <TableHeader />\r\n            <TableBody characterData={this.props.characterData}\r\n                removeCharacter={this.props.removeCharacter}\r\n            />\r\n        </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Table;","import React from 'react';\r\n\r\nclass Form extends React.Component {\r\n    initialState = {\r\n        name: '',\r\n        job: '',\r\n    }\r\n\r\n    state = this.initialState;\r\n\r\n    handleChange = (event) => {\r\n        const {name, value} = event.target;\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    submitForm = () => {\r\n        if (this.state.name === '' || this.state.job === '') return;\r\n        this.props.handleSubmit(this.state);\r\n        this.setState(this.initialState);\r\n    }\r\n\r\n    render(){\r\n        const {name, job} = this.state;\r\n\r\n        return(\r\n            <form>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    value={name}\r\n                    onChange={this.handleChange}/>\r\n                <label htmlFor=\"job\">Job</label>\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"job\"\r\n                    id=\"job\"\r\n                    value={job}\r\n                    onChange={this.handleChange}/>\r\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport Table from './Table';\r\nimport Form from './Form';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        characters: [],\r\n    }\r\n\r\n    removeCharacter = (index) => {\r\n        this.setState({\r\n            characters: this.state.characters.filter((character, i) => {\r\n                return i !== index\r\n            }),\r\n        })\r\n    }\r\n\r\n    handleSubmit = (character) => {\r\n        this.setState({characters: this.state.characters.concat([character])});\r\n    }\r\n\r\n    render(){\r\n      return (\r\n        <div className=\"App\">\r\n          <h1>React Tutorial</h1>\r\n          <p>Add a character with a name and a job to the table!!!</p>\r\n          <Table \r\n            characterData={this.state.characters}\r\n            removeCharacter = {this.removeCharacter}  \r\n          />\r\n          <h3>Add New</h3>\r\n          <Form handleSubmit={this.handleSubmit}/>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\n// import App from './Api';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}